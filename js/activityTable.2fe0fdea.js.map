{"version":3,"file":"js/activityTable.2fe0fdea.js","mappings":"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","sources":["webpack://h5-u2/./src/api/request.js","webpack://h5-u2/./src/utils/utils.js","webpack://h5-u2/./src/views/activityTable.vue","webpack://h5-u2/./src/views/activityTable.vue?2fa5"],"sourcesContent":["import axios from 'axios'\nimport { ElMessage } from 'element-plus'\n// 配置项\n// http://192.168.1.135:3868 http://192.168.1.199:3868\nconst axiosOption = {\n    baseURL: process.env.NODE_ENV === \"production\" ? location.origin : 'http://192.168.1.130:3868',\n    // baseURL: 'localhost',\n    timeout: 5000\n}\n\n// 创建一个单例\nconst instance = axios.create(axiosOption);\n\n// 添加请求拦截器\ninstance.interceptors.request.use(function (config) {\n  if(config.method === 'get' && config.url !== '/api/login') {\n    if(localStorage.getItem('os-token')) {\n      if(!config.params) config.params = {}\n      Object.assign(config.params, { token: localStorage.getItem('os-token' )})\n    } else {\n      ElMessage({\n        message: '请先登录',\n        type: 'warning',\n      })\n      localStorage.clear()\n    }\n  }\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\ninstance.interceptors.response.use(function (response) {\n  // 对响应数据做点什么\n  if(response.data.ret === 1) {\n    ElMessage({\n      message: '请先登录',\n      type: 'warning',\n    })\n    // localStorage.clear()\n    // setTimeout(() => location.href = '/login', 1500)\n  }\n  // if(response.ret === 4) {\n  //   message.warning(response.msg)\n  // }\n  return response.data;\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\n\nexport default instance;","export function getArray(interval = 0, start = new Date(), end = new Date()) {\n  start.setDate(start.getDate() - interval);\n  end.setDate(end.getDate() + interval);\n  var array = [];\n  var dataArr = [];\n  var weeks = ['日', '一', '二', '三', '四', '五', '六'];\n  var num = 0;\n  while((end.getTime() - start.getTime()) >= 0) {\n    num ++;\n    var month = (start.getMonth() + 1).toString().length == 1 ? \"0\" + (start.getMonth() + 1).toString() : (start.getMonth() + 1);\n    var day = start.getDate().toString().length == 1 ? \"0\" + start.getDate() : start.getDate();\n    var week = weeks[start.getDay()];\n    dataArr.push(month + \"月\" + day + '日（周' + week + '）');\n    var obj = {};\n    if(num == 1){\n      obj.week = '今天';\n    }else{\n      obj.week = '周'+week;\n    }\n    obj.date = new Date().getFullYear()+'-'+month + '-' + day;\n    obj.date2 = month + '-' + day;\n    array.push(obj);\n    start.setDate(start.getDate() + 1);\n  }\n  return array;\n}\n\nexport function format(array) {\n  return array.map((item) => {\n    return {\n      title: item.date.slice(5),\n      dataKey: item.date,\n      key: item.date,\n      width: 60\n    }\n  })\n}\n\n//获取两日期之间日期列表函数\nexport function getDiffDate(stime,etime){\n    //初始化日期列表，数组\n  var diffDate = new Array();\n  var i=0;\n  //开始日期小于等于结束日期,并循环\n  while(stime<=etime){\n      diffDate[i] = stime;\n      //获取开始日期时间戳\n      var stime_ts = new Date(stime).getTime();\n      //增加一天时间戳后的日期\n      var next_date = stime_ts + (24*60*60*1000);\n\n      //拼接年月日，这里的月份会返回（0-11），所以要+1\n      var next_dates_y = new Date(next_date).getFullYear()+'-';\n      var next_dates_m = (new Date(next_date).getMonth()+1 < 10)?'0'+(new Date(next_date).getMonth()+1)+'-':(new Date(next_date).getMonth()+1)+'-';\n      var next_dates_d = (new Date(next_date).getDate() < 10)?'0'+new Date(next_date).getDate():new Date(next_date).getDate();\n      stime = next_dates_y+next_dates_m+next_dates_d;\n      //增加数组key\n      i++;\n  }\n  diffDate[0] = diffDate[0].slice(0, 10)\n  return diffDate;\n}\n\n\nexport function randomColorAndNotRed() {\n  var r = Math.floor(Math.random() * 200)\n  var g = Math.floor(Math.random() * 206 + 50)\n  var b = Math.floor(Math.random() * 206 + 50)\n  return `rgb(${r},${g},${b})`\n}\n\nexport function transformBeginTime(interval) {\n  return getFormatDateTime(interval)\n}\n\nexport function getFormatDateTime(interval){\n  var date = new Date();\n  date.setDate(date.getDate() - interval);\n  var year= date.getFullYear();\n  var month = date.getMonth() + 1;\n\n  var day = date.getDate();\n  var hour = date.getHours();\n  var minute = date.getMinutes();\n  var second = date.getSeconds();\n  return [year, '-', month < 10 ? `0${month}` : month , '-', day < 10 ? `0${day}` : day, ' ', hour < 10 ? `0${hour}` : hour , ':', minute < 10 ? `0${minute}` : minute, ':', second < 10 ? `0${second}` : second ].join('');\n}\n\nexport function transformJSON(str) {\n  return (new Function(\"return \" + str))()\n}\n\nexport function range(str) {\n  let [start, end] = str.split('-')\n  start = parseInt(start)\n  end = parseInt(end)\n  let length = end - start + 1;\n  let step = start - 1;\n  return Array.apply(null,{length:length}).map((v,i) => { step++; return step;});\n}","<template>\n  <div class=\"activityTable\">\n    <el-row style=\"margin-bottom: 20px\">\n      <el-col :span=\"8\">\n        <el-select v-model=\"server\" style=\"width: 400px\">\n          <el-option disabled value=\"#\">\n            <el-input placeholder=\"请输入自定义服务器\" v-model=\"custom\" style=\"width: 270px;margin-right: 10px;\"/>\n            <el-button type=\"primary\" @click=\"search\">搜索</el-button>\n            <el-tooltip\n              class=\"box-item\"\n              effect=\"dark\"\n              content=\"请输入自定义服务器如：301001-301020,多条用#号分割\"\n              placement=\"right\"\n            >\n              ❔\n            </el-tooltip>\n          </el-option>\n          <el-option value=\"\" label=\"选择全部\"></el-option>\n          <el-option value=\"10\" label=\"美服\">美服</el-option>\n          <el-option value=\"70-80\" label=\"亚服\">亚服</el-option>\n          <el-option value=\"20\" label=\"欧服\">欧服</el-option>\n          <el-option value=\"30\" label=\"东南亚服\">东南亚服</el-option>\n        </el-select>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-select v-model=\"interval\" style=\"width: 400px\">\n          <el-option :value=\"7\" label=\"最近一周\"></el-option>\n          <el-option :value=\"15\" label=\"最近十五天\"></el-option>\n          <el-option :value=\"30\" label=\"最近一个月\"></el-option>\n          <el-option :value=\"60\" label=\"最近两个月\"></el-option>\n        </el-select>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-select v-model=\"types\" style=\"width: 400px\" multiple collapse-tags @change=\"changeTypes\">\n          <el-option value=\"-1\" label=\"选择全部\"></el-option>\n          <el-option value=\"0-1-2\" label=\"累充累销开服积分活动\"></el-option>\n          <el-option value=\"1\" label=\"开服积分\"></el-option>\n          <el-option value=\"6\" label=\"UP池\"></el-option>\n          <el-option value=\"7\" label=\"心愿池\"></el-option>\n          <el-option value=\"12\" label=\"精英挑战赛\"></el-option>\n          <el-option value=\"10000\" label=\"宾果翻牌\"></el-option>\n          <el-option value=\"120000\" label=\"燃油提纯\"></el-option>\n          <el-option value=\"20000\" label=\"单服双倍币\"></el-option>\n          <el-option value=\"130000\" label=\"全服双倍币\"></el-option>\n          <el-option value=\"30000\" label=\"星球竞技场胜场\"></el-option>\n          <el-option value=\"40000\" label=\"7日连充\"></el-option>\n          <el-option value=\"140000\" label=\"7日连充2\"></el-option>\n          <el-option value=\"50000\" label=\"英雄成长\"></el-option>\n          <el-option value=\"80000\" label=\"新翻牌\"></el-option>\n          <el-option value=\"100000\" label=\"量子拟态机\"></el-option>\n          <el-option value=\"110000\" label=\"战货系统\"></el-option>\n        </el-select>\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-table-v2\n        ref=\"tableV2\"\n        :columns=\"array\"\n        :data=\"realmList\"\n        :sort-by=\"sortState\"\n        :width=\"1600\"\n        :height=\"700\"\n        :row-height=\"30\"\n        :cache=\"30\"\n        fixed\n        scrollbar-always-on\n        @column-sort=\"onSort\"\n      >\n        <template #row=\"props\">\n          <Row v-bind=\"props\" />\n        </template>\n      </el-table-v2>\n    </el-row>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch,  cloneVNode, computed, nextTick } from 'vue'\nimport {format, getArray, getDiffDate, transformBeginTime, range} from \"@/utils/utils\"\nimport { TableV2SortOrder } from 'element-plus'\nimport { ElMessage } from 'element-plus'\nimport axios from '@/api/request';\n\n\n\n  // 表格数据处理\n  const realmList = ref([])\n  let interval = ref(7)\n  \n  const allData = ref([])\n  let beginTime = ref(transformBeginTime(interval.value))\n  const tableV2 = ref(null)\n\n  async function getData(newVal) {\n    try {\n      let { data = [] } = await axios.get('/api/select_activity', {\n        params: {\n          beginTime: beginTime.value\n        }\n      })\n      let date = []\n      data = data.filter(item => {\n        const flag1 = Math.abs(Math.floor(((new Date()).getTime() - (new Date(item.startTime)).getTime()) / (1000 * 60 * 60 *24)))\n        const flag2 = Math.abs(Math.floor(((new Date(item.endTime)).getTime() - (new Date()).getTime()) / (1000 * 60 * 60 *24)))\n        if(flag1 <= interval.value || flag2 <= interval.value) {\n          return true;\n        }\n      })\n      data.forEach((item, idx) => {\n        date[idx] = getDiffDate(item.startTime, item.endTime)\n      })\n      data.forEach((d, idx) => {\n        array.value.forEach((a) => {\n          if(date[idx].includes(a.key)) {\n            d[a.key] = `${d.activityName}(${d.activityId})(${d.activityType})`\n          }\n        })\n      })\n      await nextTick()\n      flagIdxs = []\n      allData.value = data\n    } catch(e) {\n      ElMessage({\n        message: e,\n        type: 'warning',\n      })\n    }\n  }\n  \n  onMounted(async () => {\n    await getData()\n    server.value = '10'\n    realmList.value = allData.value\n  })\n\n  watch(interval, async (value) => {\n    beginTime.value = transformBeginTime(value)\n    await getData()\n    setTimeout(() => {\n      if(server.value == '') {\n        realmList.value = allData.value\n      }\n      if(server.value == '70-80') {\n        realmList.value = allData.value.filter(item => item.realmId.toString().startsWith('70') || item.realmId.toString().startsWith('80'))\n      } else {\n        realmList.value = allData.value.filter(item => item.realmId.toString().startsWith(server.value))\n      }\n      if(!types.value.includes('-1')) {\n        realmList.value = realmList.value.filter(item => {\n          return types.value.includes(item.activityType.toString()) || (types.value.includes('0-1-2') && ['0', '1', '2'].includes(item.activityType.toString()))\n        })\n      }\n      \n      tableV2.value.scrollTo({ scrollLeft: 0, scrollTop: 0})\n    }, 0)\n  })\n\n  const array = computed(() => [...allCols.value.slice(0, 1), ...allCols.value.slice(61 - interval.value, 61 + interval.value)])\n  \n  const columns = [\n    {\n      title: '服务器',\n      key: 'realmName',\n      dataKey: 'realmName',\n      width: 100\n    },\n    ...format(getArray(60))\n  ];\n\n\n  const server = ref('')\n\n  watch(server, (value) => {\n    if(value == '') {\n      realmList.value = allData.value\n    }\n    else if(value == '70-80') {\n      realmList.value = allData.value.filter(item => item.realmId.toString().startsWith('70') || item.realmId.toString().startsWith('80'))\n    } else {\n      realmList.value = allData.value.filter(item => item.realmId.toString().startsWith(value))\n    }\n    if(!types.value.includes('-1')) {\n      realmList.value = realmList.value.filter(item => {\n        return types.value.includes(item.activityType.toString()) || (types.value.includes('0-1-2') && ['0', '1', '2'].includes(item.activityType.toString()))\n      })\n    }\n    flagIdxs = []\n    tableV2.value.scrollTo({ scrollLeft: 0, scrollTop: 0})\n  })\n\n  const types = ref(['-1'])\n\n  watch(types, (value) => {\n    if(server.value == '') {\n      realmList.value = allData.value\n    }\n    else if(server.value == '70-80') {\n      realmList.value = allData.value.filter(item => item.realmId.toString().startsWith('70') || item.realmId.toString().startsWith('80'))\n    } else {\n      realmList.value = allData.value.filter(item => item.realmId.toString().startsWith(server.value))\n    }\n    if(!value.includes('-1')) {\n      realmList.value = realmList.value.filter(item => {\n        return value.includes(item.activityType.toString()) || (value.includes('0-1-2') && ['0', '1', '2'].includes(item.activityType.toString()))\n      })\n    }\n    flagIdxs = []\n    tableV2.value.scrollTo({ scrollLeft: 0, scrollTop: 0})\n  })\n\n  const changeTypes = (value) => {\n    if(value.some(item => item !== '-1') && value[value.length - 1] != '-1') {\n      types.value = types.value.filter(item => item !== '-1')\n    } else {\n      types.value = ['-1']\n    }\n  }\n\n  const custom = ref('')\n\n  const search = () => {\n    if(custom.value) {\n      const arr = custom.value.split('#')\n      let temp = []\n      arr.forEach(item => {\n        temp.push(range(item))\n      })\n      realmList.value = allData.value.filter(item => temp.some(t => t.includes(item.realmId)))\n    } else {\n      server.value = ''\n    }\n  }\n\n  // 表格行列合并\n\n  const rowsCol = ({rowData, columns: cols }) => {\n    const dataKeys = Object.keys(rowData)\n    let colSpanIndex = 1\n    for(let i = 1; i < cols.length - 1; i++) {\n      if(cols[i].dataKey === dataKeys[7]) {\n        colSpanIndex = i\n      }\n    }\n    const colSpan = dataKeys.slice(7).length\n    columns[colSpanIndex].colSpan = () => {\n      return colSpan\n    }\n    columns[colSpanIndex].align = 'center'\n    return { colSpan, colSpanIndex }\n  };\n\n\n  const rowSpanIndex = 0\n  columns[rowSpanIndex].rowSpan = ({ rowData, rowIndex }) =>{\n    let mark = 1;\n    const col = 'realmName'\n    if(rowIndex > 0 && rowData[col] === realmList.value[rowIndex - 1][col]) {\n      return 0;\n    }\n    \n    for(let i = rowIndex + 1; i < realmList.value.length; i++) {\n      if(rowData[col] === realmList.value[i][col]) {\n        mark++;\n      }\n    }\n    return mark\n  }\n  columns[rowSpanIndex].fixed = true\n  columns[rowSpanIndex].sortable = true\n  const sortState = ref({\n    key: 'realmName',\n    order: TableV2SortOrder.ASC,\n  })\n  const onSort = (sortBy) => {\n    realmList.value = realmList.value.reverse()\n    sortState.value = sortBy\n  }\n  let flagIdxs = []\n  const allCols = ref(columns)\n  const Row = ({ rowData, rowIndex, cells, columns }) => {\n    const { colSpanIndex, colSpan } = rowsCol({ rowData, rowIndex, cells, columns })\n    const rowSpan = columns[rowSpanIndex].rowSpan({ rowData, rowIndex })\n    let flag = false\n    \n    for(let j = rowIndex; j < rowIndex + rowSpan; j++) {\n      for (let i = j + 1; i < rowIndex + rowSpan; i++) {\n        if(rowData.activityType == realmList.value[i].activityType) {\n          let [start1, start2] = [new Date(rowData.startTime), new Date(realmList.value[i].startTime)]\n          let [end1, end2] = [new Date(rowData.endTime), new Date(realmList.value[i].endTime)]\n          if(!(end1 < start2 || end2 < start1)) {\n            flagIdxs.push([j, i])\n          }\n        }\n      }\n    }\n    \n    if (colSpan >= 1 && cells[colSpanIndex] && cells[colSpanIndex].props) {\n      let width = Number.parseInt(cells[colSpanIndex].props.style.width)\n      for (let i = 1; i < colSpan; i++) {\n        width += Number.parseInt(cells[colSpanIndex + i].props.style.width)\n        cells[colSpanIndex + i] = null\n      }\n      \n      const style = {\n        ...cells[colSpanIndex].props.style,\n        width: `${width}px`,\n        justifyContent: 'center',\n        backgroundColor: 'var(--el-color-primary-light-3)',\n      }\n      for(let i = 0; i < flagIdxs.length; i++) {\n        if(flagIdxs[i].includes(rowIndex)) style.backgroundColor = 'var(--el-color-danger)'\n      }\n      cells[colSpanIndex] = cloneVNode(cells[colSpanIndex], { style })\n    }\n    \n    \n    if (rowSpan >= 1) {\n      const cell = cells[rowSpanIndex]\n      const style = {\n        ...cell.props.style,\n        backgroundColor: 'var(--el-color-primary-light-8)',\n        height: `${rowSpan * 30}px`,\n        alignSelf: 'flex-start',\n        border: '1px solid var(--el-text-color-placeholder)',\n        zIndex: 1,\n      }\n      for (let i = 1; i < rowSpan; i++) {\n        if(rowData.activityType == realmList.value[rowIndex + i].activityType) {\n          let [start1, start2] = [new Date(rowData.startTime), new Date(realmList.value[rowIndex + i].startTime)]\n          let [end1, end2] = [new Date(rowData.endTime), new Date(realmList.value[rowIndex + 1].endTime)]\n          if(!(end1 < start2 || end2 < start1)) {\n            flag = true\n          }\n        }\n      }\n      if(flag) style.backgroundColor = 'var(--el-color-danger)'\n      \n      cells[rowSpanIndex] = cloneVNode(cell, { style })\n    }\n    return cells\n  }\n  \n</script>\n\n<style lang=\"scss\" scoped>\n.activityTable {\n  width: 1800px;\n  .el-select{\n    ::v-deep .el-tag{\n      margin-bottom: 23px;\n    }\n  }\n}\n\n</style>\n","import script from \"./activityTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./activityTable.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./activityTable.vue?vue&type=style&index=0&id=204ddb0a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/runner/work/h5-u2/h5-u2/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-204ddb0a\"]])\n\nexport default __exports__"],"names":["axiosOption","baseURL","location","origin","timeout","instance","axios","interceptors","request","use","config","method","url","localStorage","getItem","params","Object","assign","token","ElMessage","message","type","clear","error","Promise","reject","response","data","ret","getArray","interval","start","Date","end","setDate","getDate","array","dataArr","weeks","num","getTime","month","getMonth","toString","length","day","week","getDay","push","obj","date","getFullYear","date2","format","map","item","title","slice","dataKey","key","width","getDiffDate","stime","etime","diffDate","Array","i","stime_ts","next_date","next_dates_y","next_dates_m","next_dates_d","transformBeginTime","getFormatDateTime","year","hour","getHours","minute","getMinutes","second","getSeconds","join","transformJSON","str","Function","range","split","parseInt","step","apply","v","realmList","ref","allData","beginTime","value","tableV2","async","getData","newVal","filter","flag1","Math","abs","floor","startTime","flag2","endTime","forEach","idx","d","a","includes","activityName","activityId","activityType","nextTick","flagIdxs","e","onMounted","server","watch","setTimeout","realmId","startsWith","types","scrollTo","scrollLeft","scrollTop","computed","allCols","columns","changeTypes","some","custom","search","arr","temp","t","rowsCol","rowData","cols","dataKeys","keys","colSpanIndex","colSpan","align","rowSpanIndex","rowSpan","rowIndex","mark","col","fixed","sortable","sortState","order","TableV2SortOrder","onSort","sortBy","reverse","Row","cells","flag","j","start1","start2","end1","end2","props","Number","style","justifyContent","backgroundColor","cloneVNode","cell","height","alignSelf","border","zIndex","__exports__"],"sourceRoot":""}